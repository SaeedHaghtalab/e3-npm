 
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "PBI-NPM-001:Mtr")
epicsEnvSet("ECMC_R",                     "PBI-NPM-001:Mtr-")
epicsEnvSet("ECMC_AXIS_NO",               "1")
epicsEnvSet("ECMC_DESC",                  "LEBT NPM1 Horizontal Lens Motor")
epicsEnvSet("ECMC_EGU",                   "mm")                        # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "2")                         # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                          # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                          # Entry for axis health output (example: ec0.s1.OUPIN_1.0)

#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "6.724")			# Numerator of encoder scaling 360 deg/turn)
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "8000")			# Number of encoder counts to achieve the scale numerator.micro steps (2000x4)	
epicsEnvSet("ECMC_ENC_BITS"               "16")				# Resolution of encoder in EtherCAt process image
# Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_TYPE"               "0")				# Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_ABS_BITS",          "0")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC$
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "0")                        # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec0.s4.POSITION")           # Ethercat entry for actual position input (encoder)

#Drive
epicsEnvSet("ECMC_DRV_TYPE"               "0")                          # Stepper: 0. DS402: 1 (DS402 = servos and advanced stepper drives)
epicsEnvSet("ECMC_DRV_SCALE_NUM"          "-67.24")			# Fastest speed in engineering units (3600 deg/s)
epicsEnvSet("ECMC_DRV_SCALE_DENOM"        "32768.0")			# I/O range for ECMC_EC_ALIAS_DRV_VELO_SET
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "ec0.s9.STM_CONTROL.0")      # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_EC_DRV_STATUS",         "ec0.s9.STM_STATUS.1")       # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",	  "ec0.s9.VELOCITY_SETPOINT")  # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "ec0.s9.STM_CONTROL.2")      # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "")                          # Ethercat entry for brake output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "0")                    # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "0")                    # Brake timing parameter in cycles (default 1kHz)

#Trajectory
epicsEnvSet("ECMC_VELO",                  "0.1868")			# Velocity in engineering units for positioning 
epicsEnvSet("ECMC_JOG_VEL",               "0.1868")			# Velocity in engineering units for jogging same as ECMC_VELO
#JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_JAR",                   "0.0")			# Jogging acceleration in engineering units. If cero ECMC_ACC will be used
epicsEnvSet("ECMC_ACCL",                  "0.1")				# Positioning acceleration in second reach ECMC_VELO 0.1 s
epicsEnvSet("ECMC_EMERG_DECEL",           "${ECMC_ACCL}")              # Emergency deceleration
epicsEnvSet("ECMC_MRES",                  "0.001")			# Motor resolution in engineering unit. Should be set to 0.001

#Homing
epicsEnvSet("ECMC_HOME_PROC",             "1")		# Homing procedur
epicsEnvSet("ECMC_HOME_POS",              "0.0")		# Position to set at homming
epicsEnvSet("ECMC_HOME_VEL_TO",           "0.1868")		# Velocity setpoint, for the first part of the homing sequence when searching for limit switches5
epicsEnvSet("ECMC_HOME_VEL_FRM",          "0.1868")		# Velocity setpoint, for the first part of the homing sequence when searching for homing sensor
epicsEnvSet("ECMC_HOME_ACC",              "3")		# Acceleration
epicsEnvSet("ECMC_HOME_DEC",              "15")		# Deceleration

#Controller
epicsEnvSet("ECMC_CNTRL_KP",              "8.0")			# Position control loop proportional gain
epicsEnvSet("ECMC_CNTRL_KI",              "0.002")			# Position control loop integral gain
epicsEnvSet("ECMC_CNTRL_KD",              "0.0")			# Position control loop differentia gain
epicsEnvSet("ECMC_CNTRL_KFF",             "1.0")			# Velocity feed forward gain

#Monitoring
#  softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "0")		# Soft low limit position
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "0")		# Soft high limit
epicsEnvSet("ECMC_DXLM_ENABLE",           "1")

# position lag; 
# If the difference between the actual position and the trajectory position setpoint is larger than ECMC_MON_LAG_MON_TOL for a period longer than ECM_MON_LAG_MON_TIME the motion will be stoped

epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "0.5")			# Position lag tolerance.
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "2")				# Position lag monitoring filter time (ms)
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "1")				# Enable position lag monitoring

# at target; 
# If the difference between the actual position and the target setpoint is within than ECMC_MON_AT_TARGET_TOL for a period longer than ECMC_AT_TARGET_MON_TIME the axis is considered to have reached target.

epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.05")			# At target tolerance.
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "2")				# At target monitoring filter time
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")				# Enable at target monitoring

# velocity
# If actual or setpoint velocity is higher than ECMC_MON_VELO_MAX for a period longer than ECM_MON_VELO_MAX_TRAJ_TIME the motion will be stopped or if longer than ECMC_MON_VELO_MAX_DRV_TIME the enable command to the drive will go down (amplifier disable)

epicsEnvSet("ECMC_MON_VELO_MAX",          "1")			# Maximun allowed speed of axis
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","10")			# Max velocity filter time. Initiates a controller ramp down of velocity to stop (ms)
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "20")			# Max velocity filter time. Disables amplifier. Normally ECMC_MON_VELO_MAX_DRV_TIME > ECMC_MON_VELO_MAX_TRAJ_TIME (ms)
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")				# Enable maximun velocity monitoring


# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec0.s1.INPIN_1.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec0.s1.INPIN_2.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec0.s-1.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec0.s-1.ONE.0")              #  Ethercat entry for external interlock input

